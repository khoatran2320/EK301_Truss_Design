from Analysis import Analysis
import numpy as np

def run_truss_design1():
    A = Analysis()
    c = np.array([[ 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
                 [  1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0],
                 [  0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],
                 [  0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],
                 [  0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [  0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0],
                 [  0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0],
                 [  0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0],
                 [  0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1]])
    sx = np.array([ [1, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0]])
    sy = np.array([ [0, 1, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 1],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0]])
    x = np.array([0, 6.5, 13, 20.5, 28, 3.25, 9.75, 16.75, 24.25])
    y = np.array([0, 0, 0, 0, 0, 5.63, 5.63, 5.63, 5.63])
    x = x.reshape(1,9)
    y = y.reshape(1,9)

    l = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -50, 0, 0, 0, 0, 0, 0])
    l = l.reshape(18,1)
    A.set_truss_design(c, sx, sy, x, y, l)
    A.construct_A_mat()
    A.account_for_dl = True
    # A.cal_weak  = True
    # A.calc_dead_load_vect()
    # A.mat_save()
    A.print_output()
    A.print_formatted_per_mem()

    
def final_design():
    A = Analysis()
    c = np.array([[ 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
                 [  1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0],
                 [  0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],
                 [  0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],
                 [  0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [  0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0],
                 [  0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0],
                 [  0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0],
                 [  0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1]])
    sx = np.array([ [1, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0]])
    sy = np.array([ [0, 1, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 1],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0]])
    x = np.array([0, 6.5, 13, 20.5, 28, 3.25, 9.75, 16.75, 24.25])
    y = np.array([0, 0, 0, 0, 0, 5.63, 9, 9, 5.63])
    x = x.reshape(1,9)
    y = y.reshape(1,9)

    l = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -50, 0, 0, 0, 0, 0, 0])
    l = l.reshape(18,1)
    A.set_truss_design(c, sx, sy, x, y, l)
    A.construct_A_mat()
    A.account_for_dl = True
    A.cal_strong  = True
    A.calc_dead_load_vect()
    # A.mat_save()
    print(A.dead_w_v)
    A.print_output()
    A.print_formatted_per_mem()

def run_truss_design2():
    A = Analysis()
    c = np.array([[ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [  1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0],
                 [  0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
                 [  0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0],
                 [  0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [  0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
                 [  0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0],
                 [  0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0],
                 [  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0],
                 [  0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0]])
    sx = np.array([ [1, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0]])
    sy = np.array([ [0, 1, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 1],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0]])
    x = np.array([0, 6.5, 13, 20.5, 28, 0, 6.5, 13, 20.5, 28])
    y = np.array([0, 0, 0, 0, 0, 6.5, 6.5, 6.5, 6.5, 6.5])
    x = x.reshape(1,10)
    y = y.reshape(1,10)

    l = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -50, 0, 0, 0, 0, 0, 0, 0])
    l = l.reshape(20,1)
    A.set_truss_design(c, sx, sy, x, y, l)
    A.construct_A_mat()
    A.print_output()
    A.print_formatted_per_mem()

def main():
    A = Analysis()
    c = np.array([[ 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
                 [  0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
                 [  0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0],
                 [  0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0],
                 [  0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0],
                 [  0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0],
                 [  0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],
                 [  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]])
    sx = np.array([ [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [1, 0, 0]])
    sy = np.array([ [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 1],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 1, 0]])
    x = np.array([0, 4, 8, 12, 12, 8, 4, 0])
    y = np.array([4, 8, 8, 4, 0, 4, 4, 0])
    x = x.reshape(1,8)
    y = y.reshape(1,8)

    l = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -25, 0])
    l = l.reshape(16,1)
    A.set_truss_design(c, sx, sy, x, y, l)
    # A.mat_load()
    # print(A.get_x_vect())
    # print(A.get_y_vect())
    A.construct_A_mat()
    # A.mat_save()
    # A.solve()

    # print(A.get_a_mat())

    # A.print_output()
    # A.print_formatted_per_mem()
    # A.calc_r_vect()
    # A.calc_dead_load_vect()
    # print(A.dead_load_vect)
    # A.calc_failure_vect()
    # A.print_truss_details()

    # print(A.calc_joint_dist([3,0], [0,0]))
    
# def test():
#     A = Analysis(8, 13, 20)
#     print(A.calc_joint_dist([0,4], [4,4]))
    
if __name__ == "__main__":
    # main()
    # test()
    # run_truss_design1()
    final_design()